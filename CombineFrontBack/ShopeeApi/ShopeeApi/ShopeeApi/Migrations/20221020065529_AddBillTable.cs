using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace ShopeeApi.Migrations
{
    public partial class AddBillTable : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.CreateTable(
                name: "Bills",
                columns: table => new
                {
                    BillId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    totalPayment = table.Column<float>(type: "real", nullable: false, defaultValue: 0f),
                    UseName = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    UserId = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Bills", x => x.BillId);
                    table.ForeignKey(
                        name: "FK_Bills_Users_UserId",
                        column: x => x.UserId,
                        principalTable: "Users",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 98, 148, 31, 251, 72, 116, 2, 99, 6, 220, 121, 29, 205, 166, 235, 169, 200, 59, 63, 213, 55, 4, 194, 163, 132, 56, 22, 133, 70, 204, 0, 211, 24, 41, 70, 246, 149, 25, 122, 147, 54, 115, 12, 180, 15, 156, 62, 235, 96, 185, 101, 245, 131, 210, 123, 15, 252, 253, 130, 161, 214, 238, 55, 36 }, new byte[] { 136, 99, 62, 83, 255, 248, 128, 158, 223, 137, 163, 170, 176, 234, 18, 28, 102, 73, 205, 138, 163, 27, 25, 86, 7, 230, 176, 173, 60, 234, 63, 205, 187, 177, 14, 216, 4, 69, 112, 133, 52, 179, 225, 5, 66, 254, 242, 21, 149, 221, 85, 96, 15, 65, 210, 106, 29, 166, 108, 45, 99, 121, 244, 78, 115, 71, 12, 245, 125, 0, 234, 234, 136, 208, 195, 238, 54, 80, 42, 143, 91, 245, 53, 133, 244, 46, 98, 157, 254, 189, 78, 83, 89, 59, 11, 209, 115, 16, 193, 138, 48, 205, 208, 130, 108, 142, 169, 170, 197, 42, 119, 96, 6, 11, 104, 8, 171, 61, 171, 184, 112, 128, 127, 13, 248, 249, 163, 18 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 119, 203, 63, 181, 88, 156, 100, 146, 233, 14, 6, 227, 35, 237, 195, 244, 229, 176, 139, 155, 170, 83, 166, 29, 86, 135, 126, 125, 198, 63, 170, 176, 230, 225, 108, 55, 232, 87, 106, 16, 215, 222, 129, 73, 53, 64, 218, 198, 244, 52, 114, 247, 93, 138, 68, 39, 221, 154, 32, 250, 73, 59, 97, 197 }, new byte[] { 135, 168, 248, 136, 3, 146, 201, 109, 17, 220, 193, 212, 224, 170, 226, 53, 36, 199, 121, 59, 48, 19, 240, 122, 58, 22, 186, 175, 207, 195, 71, 18, 137, 178, 54, 67, 193, 239, 57, 197, 77, 180, 74, 100, 27, 233, 232, 194, 52, 105, 229, 241, 224, 80, 58, 148, 122, 244, 129, 148, 178, 238, 0, 94, 46, 97, 15, 4, 64, 107, 22, 178, 213, 38, 116, 5, 31, 112, 28, 231, 82, 16, 147, 155, 110, 58, 229, 22, 134, 151, 22, 240, 199, 233, 68, 65, 57, 67, 76, 125, 243, 205, 126, 103, 190, 182, 243, 20, 78, 255, 247, 245, 112, 119, 72, 206, 1, 248, 166, 63, 121, 38, 36, 255, 120, 107, 61, 226 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 240, 237, 56, 173, 127, 34, 43, 124, 48, 242, 150, 178, 51, 173, 88, 85, 220, 176, 48, 100, 99, 31, 133, 177, 236, 145, 184, 88, 140, 239, 147, 145, 112, 74, 107, 105, 132, 204, 112, 126, 228, 184, 168, 143, 239, 91, 194, 168, 8, 239, 235, 142, 234, 40, 212, 47, 155, 17, 105, 113, 96, 66, 167, 80 }, new byte[] { 209, 209, 50, 112, 221, 4, 140, 174, 63, 88, 244, 214, 77, 90, 114, 84, 184, 177, 173, 136, 129, 65, 248, 185, 94, 64, 187, 165, 241, 131, 250, 13, 55, 76, 46, 127, 57, 75, 215, 229, 135, 18, 237, 182, 138, 176, 201, 164, 7, 148, 34, 51, 213, 155, 62, 143, 37, 118, 184, 146, 191, 226, 144, 65, 150, 119, 70, 16, 67, 89, 193, 99, 54, 202, 20, 192, 253, 56, 180, 117, 51, 204, 218, 157, 134, 190, 161, 218, 106, 57, 60, 255, 205, 100, 202, 176, 9, 71, 207, 225, 222, 204, 131, 111, 199, 46, 128, 54, 10, 174, 15, 146, 224, 30, 41, 192, 12, 82, 137, 4, 28, 133, 200, 113, 249, 135, 122, 94 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 249, 196, 176, 47, 55, 239, 58, 137, 114, 27, 123, 100, 64, 13, 62, 237, 253, 251, 135, 237, 46, 58, 201, 73, 254, 12, 225, 171, 88, 29, 83, 158, 156, 118, 9, 174, 76, 48, 129, 131, 205, 99, 31, 115, 110, 149, 212, 165, 48, 157, 116, 123, 98, 192, 189, 240, 193, 11, 17, 241, 151, 232, 122, 246 }, new byte[] { 175, 184, 96, 140, 202, 36, 200, 10, 237, 40, 127, 52, 16, 48, 255, 199, 52, 110, 141, 173, 233, 114, 157, 119, 179, 0, 104, 42, 136, 229, 16, 149, 96, 29, 8, 79, 99, 126, 124, 200, 120, 145, 95, 154, 7, 22, 82, 163, 71, 22, 160, 25, 251, 175, 170, 208, 169, 197, 13, 237, 238, 98, 236, 153, 131, 168, 87, 246, 13, 153, 238, 56, 173, 155, 241, 97, 40, 147, 230, 196, 167, 20, 164, 78, 145, 62, 131, 119, 20, 233, 208, 195, 11, 165, 155, 218, 17, 113, 221, 109, 151, 57, 1, 75, 245, 105, 185, 250, 232, 112, 228, 44, 25, 120, 67, 194, 46, 177, 84, 25, 108, 24, 105, 42, 93, 200, 179, 11 } });

            migrationBuilder.CreateIndex(
                name: "IX_Bills_BillId",
                table: "Bills",
                column: "BillId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_Bills_UserId",
                table: "Bills",
                column: "UserId");
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "Bills");

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 151, 19, 195, 93, 233, 137, 223, 33, 102, 178, 148, 175, 39, 219, 89, 111, 23, 14, 165, 154, 63, 198, 139, 224, 3, 92, 9, 168, 130, 212, 191, 243, 108, 34, 104, 239, 144, 135, 177, 123, 9, 150, 166, 168, 150, 194, 151, 255, 7, 50, 66, 190, 123, 228, 2, 24, 63, 230, 31, 228, 94, 87, 218, 228 }, new byte[] { 49, 174, 85, 35, 1, 59, 34, 79, 87, 107, 144, 33, 176, 146, 73, 88, 164, 184, 107, 34, 40, 177, 132, 246, 91, 182, 113, 101, 181, 250, 149, 205, 107, 112, 99, 239, 55, 147, 207, 120, 6, 229, 204, 65, 203, 120, 55, 194, 10, 248, 129, 77, 76, 17, 50, 72, 101, 131, 17, 6, 54, 231, 32, 198, 165, 221, 98, 35, 231, 226, 31, 139, 47, 235, 103, 81, 42, 221, 92, 11, 100, 10, 167, 223, 143, 231, 188, 24, 110, 52, 190, 76, 20, 71, 49, 204, 21, 28, 46, 213, 146, 99, 129, 225, 59, 51, 156, 178, 39, 39, 56, 199, 20, 252, 29, 110, 254, 86, 209, 0, 133, 89, 188, 170, 201, 124, 178, 58 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 101, 242, 144, 116, 17, 108, 31, 171, 152, 191, 41, 153, 180, 38, 75, 6, 172, 206, 234, 127, 81, 64, 182, 253, 172, 134, 161, 130, 223, 217, 33, 255, 104, 113, 84, 200, 77, 253, 29, 73, 100, 174, 86, 52, 122, 53, 127, 40, 179, 229, 73, 133, 227, 16, 73, 219, 170, 222, 135, 1, 211, 10, 60, 1 }, new byte[] { 128, 208, 105, 132, 195, 37, 142, 43, 245, 145, 180, 142, 116, 110, 247, 199, 178, 152, 202, 236, 119, 185, 80, 241, 20, 222, 170, 40, 23, 252, 179, 125, 0, 30, 20, 240, 173, 45, 19, 152, 158, 215, 131, 208, 120, 252, 100, 189, 51, 168, 36, 50, 166, 79, 83, 64, 111, 188, 137, 221, 186, 164, 19, 31, 147, 140, 104, 9, 187, 2, 108, 222, 11, 69, 215, 248, 43, 38, 79, 189, 239, 35, 141, 144, 124, 199, 117, 177, 21, 134, 51, 132, 213, 149, 54, 255, 152, 107, 24, 120, 103, 141, 110, 198, 106, 72, 217, 246, 142, 106, 150, 19, 202, 237, 63, 25, 175, 234, 190, 122, 80, 237, 0, 98, 59, 84, 14, 236 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 110, 19, 20, 29, 55, 151, 14, 236, 46, 78, 252, 65, 94, 35, 39, 208, 155, 191, 76, 168, 42, 163, 38, 7, 159, 205, 56, 33, 1, 41, 124, 209, 141, 249, 231, 149, 179, 162, 154, 4, 21, 58, 51, 213, 57, 222, 207, 147, 121, 172, 3, 24, 31, 3, 149, 16, 198, 196, 82, 49, 38, 132, 253, 56 }, new byte[] { 18, 146, 236, 68, 164, 239, 57, 85, 30, 153, 19, 242, 225, 148, 96, 181, 138, 9, 24, 117, 43, 48, 179, 139, 237, 34, 145, 194, 237, 45, 104, 26, 109, 176, 43, 238, 222, 216, 170, 55, 239, 71, 181, 249, 72, 140, 233, 251, 142, 192, 173, 27, 24, 11, 162, 201, 145, 233, 194, 144, 73, 131, 129, 187, 31, 8, 75, 238, 31, 100, 90, 153, 246, 25, 41, 60, 216, 49, 139, 175, 63, 111, 116, 139, 40, 44, 184, 101, 225, 145, 142, 6, 17, 165, 122, 232, 83, 158, 177, 50, 203, 13, 146, 64, 152, 72, 189, 187, 16, 42, 6, 130, 61, 72, 119, 234, 23, 149, 147, 103, 74, 66, 28, 0, 16, 41, 166, 37 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 242, 196, 11, 15, 45, 188, 162, 36, 191, 116, 159, 54, 20, 81, 181, 213, 1, 103, 161, 69, 238, 145, 116, 57, 91, 8, 168, 177, 17, 110, 47, 110, 121, 154, 106, 232, 82, 100, 237, 70, 102, 148, 226, 199, 175, 125, 223, 181, 137, 238, 97, 8, 208, 125, 217, 165, 155, 133, 197, 81, 67, 214, 218, 50 }, new byte[] { 67, 30, 20, 222, 71, 115, 111, 208, 110, 3, 99, 129, 66, 220, 8, 188, 217, 97, 116, 51, 249, 103, 243, 82, 111, 181, 233, 198, 2, 107, 131, 164, 198, 31, 15, 56, 143, 105, 222, 206, 106, 193, 238, 244, 29, 149, 186, 175, 50, 100, 17, 73, 43, 140, 57, 211, 55, 100, 28, 149, 200, 31, 135, 108, 61, 200, 165, 231, 190, 89, 240, 161, 169, 184, 151, 46, 202, 40, 37, 50, 232, 201, 148, 128, 48, 31, 214, 249, 118, 150, 155, 218, 239, 176, 111, 189, 41, 174, 209, 64, 36, 183, 123, 196, 3, 9, 105, 42, 231, 165, 48, 170, 29, 201, 34, 71, 159, 128, 30, 233, 182, 217, 237, 64, 47, 229, 191, 186 } });
        }
    }
}
