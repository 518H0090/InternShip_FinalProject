using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace ShopeeApi.Migrations
{
    public partial class seedfoodres9 : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.InsertData(
                table: "Foods",
                columns: new[] { "FoodId", "FoodDescription", "FoodImageUrl", "FoodPrice", "FoodTitle", "RestaurantId" },
                values: new object[,]
                {
                    { 135, "Bánh Biscotti hạnh nhân & socola nguyên chất, dành cho những người sành ăn tạo ra một sự kết hợp ngon miệng.", "./ImageForSeedData/Food/Restaurant9/food135.jpeg", 99000, "Bánh Biscotti Dark Chocolate - Hộp 195gr", 8 },
                    { 136, "Hương vị truyền thống kết hợp hạt hạnh nhân & óc chó với một chút hương vị hạt tiểu hồi.", "./ImageForSeedData/Food/Restaurant9/food136.jpeg", 99000, "Bánh Biscotti Truyền Thống - Hộp 195gr", 8 },
                    { 137, "Nam Việt Quất kết hợp với Hạnh Nhân và được nướng hai lần mang đến cho bạn cảm giác dai giòn ngon tuyệt đỉnh.", "./ImageForSeedData/Food/Restaurant9/food137.jpeg", 120000, "Biscotti Nam Việt Quất - Hộp 195gr", 8 }
                });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 177, 255, 133, 202, 141, 143, 223, 146, 3, 87, 229, 15, 90, 205, 104, 93, 34, 252, 212, 1, 43, 55, 208, 34, 211, 52, 182, 148, 54, 255, 49, 126, 223, 18, 37, 176, 93, 212, 8, 211, 221, 154, 48, 184, 193, 245, 131, 227, 30, 88, 72, 229, 46, 182, 9, 94, 101, 107, 231, 58, 4, 83, 255, 17 }, new byte[] { 9, 1, 128, 34, 113, 183, 119, 62, 234, 225, 63, 92, 205, 58, 153, 46, 141, 90, 61, 46, 16, 250, 20, 137, 228, 130, 24, 3, 149, 141, 239, 105, 189, 186, 231, 152, 173, 61, 173, 248, 248, 42, 221, 241, 234, 53, 204, 133, 146, 97, 89, 137, 132, 236, 180, 105, 150, 237, 64, 148, 45, 136, 20, 43, 199, 123, 193, 178, 187, 127, 233, 169, 12, 229, 109, 230, 112, 220, 39, 194, 253, 247, 64, 155, 210, 1, 70, 199, 113, 12, 116, 179, 195, 164, 117, 140, 77, 118, 77, 78, 192, 244, 96, 253, 217, 217, 163, 110, 205, 10, 25, 190, 27, 30, 36, 51, 253, 68, 21, 70, 169, 106, 118, 38, 234, 65, 78, 31 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 111, 14, 77, 21, 55, 228, 192, 143, 150, 142, 216, 126, 142, 20, 186, 221, 11, 215, 133, 173, 239, 93, 186, 225, 28, 163, 247, 210, 176, 219, 254, 2, 15, 214, 36, 51, 236, 76, 96, 77, 26, 159, 104, 161, 140, 183, 196, 220, 70, 211, 68, 85, 190, 28, 246, 199, 191, 64, 22, 78, 28, 102, 48, 210 }, new byte[] { 210, 67, 133, 10, 241, 138, 176, 220, 7, 161, 181, 88, 196, 164, 214, 91, 23, 249, 169, 218, 122, 69, 0, 244, 115, 62, 206, 238, 40, 168, 71, 233, 121, 102, 226, 35, 146, 75, 54, 185, 193, 114, 72, 242, 86, 48, 201, 162, 128, 5, 81, 135, 136, 53, 80, 70, 218, 223, 82, 207, 138, 104, 50, 218, 213, 244, 250, 248, 106, 63, 224, 79, 21, 47, 133, 81, 69, 55, 230, 174, 246, 73, 77, 27, 109, 66, 177, 52, 65, 114, 209, 229, 106, 242, 160, 6, 193, 42, 166, 144, 47, 86, 233, 177, 60, 49, 81, 51, 24, 253, 230, 199, 16, 148, 32, 93, 187, 31, 184, 101, 65, 243, 124, 211, 23, 252, 4, 125 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 135, 154, 180, 223, 83, 173, 92, 113, 125, 20, 82, 35, 171, 181, 42, 201, 70, 139, 102, 139, 71, 207, 62, 148, 159, 25, 61, 179, 129, 46, 245, 65, 18, 217, 40, 227, 130, 132, 11, 179, 220, 45, 210, 56, 174, 193, 239, 138, 241, 162, 202, 103, 231, 171, 54, 235, 69, 121, 117, 121, 32, 180, 228, 107 }, new byte[] { 53, 238, 56, 214, 57, 218, 133, 115, 186, 18, 26, 198, 16, 135, 150, 41, 71, 81, 232, 251, 65, 63, 131, 244, 60, 235, 46, 241, 147, 63, 254, 121, 111, 84, 45, 179, 106, 81, 178, 240, 61, 68, 9, 93, 121, 7, 2, 101, 209, 220, 40, 134, 197, 216, 92, 10, 70, 72, 138, 129, 146, 41, 172, 255, 119, 62, 43, 174, 86, 141, 243, 200, 230, 194, 171, 216, 69, 191, 142, 124, 215, 199, 34, 42, 81, 147, 168, 25, 71, 133, 175, 245, 120, 116, 199, 210, 168, 55, 167, 199, 178, 40, 130, 71, 167, 163, 131, 101, 47, 232, 4, 162, 114, 221, 6, 217, 42, 121, 126, 29, 42, 9, 214, 103, 137, 126, 187, 217 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 191, 204, 86, 25, 218, 229, 197, 204, 14, 166, 244, 151, 96, 120, 204, 162, 198, 43, 21, 158, 51, 26, 52, 29, 210, 247, 51, 202, 49, 79, 194, 234, 74, 98, 75, 144, 146, 65, 212, 83, 41, 140, 119, 162, 124, 64, 14, 209, 6, 159, 92, 155, 87, 110, 70, 47, 71, 141, 182, 108, 112, 211, 93, 171 }, new byte[] { 138, 226, 146, 55, 96, 160, 146, 193, 135, 161, 228, 42, 3, 202, 186, 8, 7, 34, 81, 114, 147, 16, 169, 89, 216, 9, 255, 122, 170, 126, 243, 173, 221, 55, 129, 162, 167, 91, 30, 26, 59, 36, 42, 233, 197, 155, 228, 158, 136, 82, 93, 100, 153, 162, 140, 52, 175, 121, 232, 46, 220, 79, 38, 235, 196, 146, 200, 168, 196, 241, 73, 235, 90, 220, 59, 62, 121, 154, 170, 135, 51, 16, 216, 168, 81, 254, 47, 57, 70, 92, 49, 202, 188, 225, 182, 203, 217, 216, 35, 213, 25, 25, 217, 132, 98, 225, 157, 14, 119, 168, 61, 151, 138, 65, 88, 194, 192, 11, 224, 233, 88, 10, 83, 152, 66, 251, 51, 40 } });
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DeleteData(
                table: "Foods",
                keyColumn: "FoodId",
                keyValue: 135);

            migrationBuilder.DeleteData(
                table: "Foods",
                keyColumn: "FoodId",
                keyValue: 136);

            migrationBuilder.DeleteData(
                table: "Foods",
                keyColumn: "FoodId",
                keyValue: 137);

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 60, 214, 28, 130, 245, 117, 224, 91, 242, 247, 196, 138, 206, 104, 4, 55, 35, 174, 163, 60, 183, 85, 104, 115, 44, 220, 145, 97, 63, 165, 17, 167, 48, 28, 207, 132, 241, 182, 193, 131, 204, 222, 157, 103, 144, 159, 144, 51, 175, 87, 223, 175, 99, 81, 230, 226, 4, 142, 63, 159, 99, 200, 176, 107 }, new byte[] { 220, 168, 253, 226, 220, 1, 115, 234, 238, 59, 27, 191, 49, 149, 28, 174, 177, 242, 178, 255, 225, 206, 113, 91, 81, 135, 27, 44, 77, 63, 140, 92, 108, 50, 225, 18, 232, 240, 109, 189, 77, 183, 195, 70, 174, 89, 117, 76, 113, 102, 104, 135, 15, 208, 3, 8, 163, 27, 73, 242, 163, 40, 58, 248, 186, 177, 247, 228, 236, 217, 188, 87, 44, 93, 149, 97, 133, 78, 48, 161, 191, 109, 98, 192, 179, 247, 251, 208, 46, 209, 0, 84, 247, 55, 34, 83, 155, 191, 163, 70, 207, 174, 148, 94, 171, 71, 191, 119, 223, 2, 249, 101, 187, 125, 142, 68, 237, 213, 202, 75, 68, 26, 0, 106, 11, 31, 89, 235 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 167, 70, 78, 43, 4, 57, 32, 77, 249, 80, 249, 149, 219, 14, 19, 48, 35, 208, 153, 204, 234, 229, 66, 47, 11, 160, 25, 57, 48, 5, 154, 241, 43, 107, 222, 7, 221, 255, 169, 192, 204, 87, 217, 222, 32, 8, 204, 94, 210, 254, 1, 93, 150, 181, 180, 68, 166, 12, 147, 170, 110, 97, 218, 55 }, new byte[] { 135, 84, 238, 93, 126, 27, 196, 28, 88, 255, 234, 135, 174, 228, 244, 107, 69, 26, 181, 5, 144, 131, 238, 49, 217, 143, 127, 215, 130, 3, 7, 211, 177, 232, 131, 25, 195, 112, 26, 42, 223, 103, 150, 243, 140, 39, 32, 229, 185, 209, 93, 216, 102, 230, 162, 85, 249, 218, 250, 154, 249, 74, 250, 120, 199, 13, 85, 45, 30, 181, 169, 208, 184, 238, 193, 235, 188, 175, 78, 64, 125, 247, 138, 90, 74, 22, 197, 174, 123, 226, 176, 217, 228, 73, 165, 8, 167, 231, 191, 96, 116, 200, 84, 30, 202, 109, 244, 179, 67, 225, 91, 125, 136, 196, 150, 170, 68, 70, 203, 42, 207, 134, 179, 56, 201, 179, 162, 3 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 9, 137, 74, 138, 169, 206, 24, 202, 153, 55, 217, 125, 76, 15, 22, 192, 183, 167, 12, 236, 15, 154, 9, 246, 183, 34, 28, 119, 208, 73, 186, 10, 129, 101, 189, 219, 45, 125, 133, 53, 176, 162, 97, 255, 3, 6, 114, 142, 49, 3, 42, 225, 12, 210, 122, 118, 242, 122, 26, 216, 140, 166, 197, 49 }, new byte[] { 72, 167, 155, 135, 13, 7, 52, 160, 103, 113, 244, 191, 34, 120, 250, 48, 193, 242, 161, 97, 50, 246, 230, 217, 247, 174, 235, 54, 147, 233, 210, 34, 126, 171, 14, 27, 164, 108, 1, 103, 52, 243, 197, 2, 29, 0, 242, 154, 248, 195, 189, 38, 85, 192, 61, 207, 173, 35, 238, 194, 89, 43, 70, 38, 208, 253, 59, 247, 156, 95, 182, 5, 128, 128, 33, 193, 208, 104, 103, 70, 163, 91, 75, 12, 248, 247, 6, 61, 39, 189, 82, 100, 84, 130, 219, 179, 247, 218, 5, 43, 216, 64, 213, 220, 122, 178, 189, 148, 183, 196, 221, 79, 105, 106, 18, 146, 59, 178, 188, 128, 118, 216, 161, 16, 43, 244, 132, 123 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 88, 172, 158, 14, 91, 191, 134, 116, 218, 205, 94, 183, 66, 163, 205, 1, 35, 66, 136, 150, 219, 221, 7, 235, 215, 113, 185, 229, 13, 244, 73, 1, 210, 191, 53, 154, 81, 19, 172, 85, 49, 126, 214, 118, 216, 155, 125, 121, 146, 10, 109, 193, 239, 3, 244, 113, 203, 247, 122, 163, 158, 29, 42, 123 }, new byte[] { 220, 168, 239, 202, 117, 8, 22, 247, 75, 17, 154, 97, 7, 138, 1, 13, 8, 159, 232, 87, 192, 219, 208, 33, 160, 76, 125, 86, 56, 9, 171, 130, 120, 231, 58, 21, 32, 12, 95, 34, 58, 239, 137, 238, 211, 32, 14, 81, 58, 194, 109, 53, 134, 22, 243, 117, 68, 12, 55, 152, 127, 27, 254, 89, 21, 138, 182, 232, 75, 246, 197, 177, 21, 35, 52, 85, 33, 123, 173, 33, 83, 6, 177, 143, 214, 41, 197, 80, 255, 227, 238, 201, 211, 107, 244, 189, 198, 2, 33, 31, 175, 61, 27, 60, 40, 26, 15, 221, 50, 222, 59, 18, 231, 201, 250, 40, 175, 161, 69, 0, 30, 196, 117, 68, 19, 202, 86, 159 } });
        }
    }
}