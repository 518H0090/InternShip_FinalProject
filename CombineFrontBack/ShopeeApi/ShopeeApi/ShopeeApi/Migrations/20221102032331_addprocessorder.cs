using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace ShopeeApi.Migrations
{
    public partial class addprocessorder : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.AddColumn<string>(
                name: "CreatedBy",
                table: "TransferOrders",
                type: "nvarchar(max)",
                nullable: false,
                defaultValue: "");

            migrationBuilder.AddColumn<DateTime>(
                name: "CreatedOn",
                table: "TransferOrders",
                type: "datetime2",
                nullable: false,
                defaultValue: new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

            migrationBuilder.AddColumn<string>(
                name: "UpdatedBy",
                table: "TransferOrders",
                type: "nvarchar(max)",
                nullable: false,
                defaultValue: "");

            migrationBuilder.AddColumn<DateTime>(
                name: "UpdatedOn",
                table: "TransferOrders",
                type: "datetime2",
                nullable: false,
                defaultValue: new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 18, 172, 43, 105, 120, 25, 92, 101, 36, 97, 172, 39, 71, 164, 4, 88, 20, 4, 238, 106, 218, 187, 69, 138, 57, 185, 59, 26, 15, 26, 89, 212, 147, 41, 213, 203, 235, 221, 215, 220, 226, 46, 192, 97, 217, 54, 224, 249, 71, 39, 238, 56, 226, 243, 83, 171, 207, 240, 10, 107, 64, 172, 69, 236 }, new byte[] { 114, 28, 195, 56, 77, 172, 69, 67, 6, 219, 50, 41, 142, 91, 120, 158, 202, 130, 181, 23, 227, 75, 130, 106, 80, 164, 146, 132, 74, 193, 177, 120, 110, 211, 200, 211, 187, 130, 7, 221, 134, 190, 163, 172, 142, 213, 149, 246, 192, 164, 233, 3, 97, 70, 2, 160, 208, 47, 181, 219, 149, 173, 163, 249, 85, 25, 51, 4, 14, 159, 232, 19, 244, 242, 20, 5, 103, 163, 33, 58, 30, 236, 93, 91, 90, 216, 72, 49, 106, 17, 202, 163, 196, 96, 244, 198, 183, 7, 78, 177, 105, 174, 51, 243, 85, 84, 163, 226, 180, 3, 198, 137, 134, 183, 231, 111, 3, 158, 47, 64, 99, 96, 117, 42, 105, 25, 111, 233 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 27, 6, 52, 143, 229, 248, 156, 103, 53, 151, 182, 111, 236, 204, 17, 60, 110, 193, 190, 12, 36, 247, 9, 99, 245, 191, 173, 119, 106, 35, 134, 134, 207, 11, 165, 249, 182, 179, 236, 187, 153, 239, 64, 217, 94, 93, 70, 247, 182, 244, 106, 171, 249, 249, 214, 2, 50, 151, 16, 181, 112, 66, 44, 66 }, new byte[] { 176, 22, 175, 249, 172, 23, 55, 44, 36, 72, 64, 147, 51, 222, 28, 198, 113, 197, 116, 62, 45, 118, 72, 141, 76, 83, 237, 170, 204, 165, 26, 247, 233, 162, 228, 30, 129, 137, 193, 198, 211, 73, 80, 66, 201, 111, 148, 253, 238, 221, 244, 50, 20, 127, 174, 18, 157, 95, 247, 76, 164, 35, 135, 126, 30, 0, 234, 196, 232, 36, 234, 40, 226, 161, 7, 166, 142, 220, 142, 95, 31, 49, 35, 221, 206, 113, 217, 204, 123, 179, 79, 93, 84, 6, 168, 171, 252, 149, 50, 109, 120, 133, 164, 139, 201, 159, 205, 243, 59, 64, 195, 245, 112, 110, 134, 118, 13, 30, 175, 1, 179, 246, 164, 148, 235, 6, 255, 22 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 104, 197, 211, 206, 225, 45, 31, 206, 157, 92, 214, 114, 58, 238, 250, 136, 130, 145, 67, 136, 113, 173, 14, 161, 21, 135, 228, 208, 100, 136, 34, 64, 225, 3, 243, 166, 130, 232, 163, 29, 242, 137, 147, 73, 60, 83, 167, 249, 227, 77, 48, 179, 186, 215, 173, 163, 252, 126, 117, 42, 62, 211, 207, 102 }, new byte[] { 205, 71, 18, 87, 142, 242, 86, 129, 67, 230, 45, 47, 39, 145, 150, 104, 15, 198, 0, 61, 207, 133, 224, 156, 188, 101, 210, 253, 127, 5, 63, 149, 245, 151, 88, 106, 133, 105, 184, 222, 47, 79, 246, 86, 208, 122, 13, 2, 130, 31, 242, 229, 90, 164, 183, 33, 98, 61, 25, 227, 138, 34, 153, 166, 156, 240, 39, 212, 143, 211, 29, 101, 44, 216, 245, 80, 216, 62, 39, 68, 182, 60, 43, 236, 76, 208, 251, 153, 133, 233, 179, 187, 77, 75, 233, 240, 138, 161, 252, 163, 159, 190, 162, 160, 40, 152, 158, 27, 45, 166, 113, 230, 159, 205, 165, 169, 202, 191, 200, 84, 217, 83, 103, 142, 34, 54, 114, 224 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 218, 103, 104, 164, 50, 255, 87, 26, 164, 160, 195, 95, 118, 143, 251, 73, 225, 152, 185, 26, 230, 74, 255, 50, 223, 34, 151, 228, 215, 240, 30, 97, 75, 139, 251, 66, 138, 53, 237, 100, 48, 2, 91, 207, 36, 243, 24, 211, 74, 21, 34, 71, 164, 195, 119, 158, 54, 247, 4, 190, 136, 76, 140, 130 }, new byte[] { 159, 141, 228, 94, 164, 187, 174, 255, 108, 237, 12, 5, 103, 89, 48, 110, 207, 214, 228, 245, 195, 80, 8, 105, 6, 224, 116, 60, 90, 168, 27, 70, 9, 137, 66, 255, 70, 15, 13, 131, 204, 218, 120, 201, 91, 95, 211, 2, 222, 166, 244, 33, 10, 57, 122, 59, 182, 74, 0, 123, 86, 142, 13, 56, 191, 162, 51, 136, 141, 50, 44, 253, 131, 177, 7, 202, 81, 81, 215, 250, 14, 10, 133, 91, 94, 177, 62, 137, 219, 141, 123, 134, 227, 172, 137, 97, 57, 34, 113, 8, 19, 48, 247, 43, 168, 248, 245, 197, 32, 48, 4, 181, 41, 75, 167, 23, 98, 57, 24, 68, 130, 253, 179, 25, 177, 244, 133, 232 } });
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropColumn(
                name: "CreatedBy",
                table: "TransferOrders");

            migrationBuilder.DropColumn(
                name: "CreatedOn",
                table: "TransferOrders");

            migrationBuilder.DropColumn(
                name: "UpdatedBy",
                table: "TransferOrders");

            migrationBuilder.DropColumn(
                name: "UpdatedOn",
                table: "TransferOrders");

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 30, 61, 24, 31, 23, 101, 112, 101, 249, 221, 135, 99, 71, 26, 33, 247, 82, 88, 231, 166, 114, 240, 93, 161, 183, 35, 139, 187, 140, 226, 82, 134, 169, 86, 175, 218, 94, 31, 10, 22, 231, 228, 216, 248, 247, 90, 153, 96, 99, 140, 100, 240, 187, 220, 45, 235, 20, 183, 108, 36, 221, 248, 144, 164 }, new byte[] { 227, 88, 145, 128, 177, 186, 225, 49, 81, 109, 201, 238, 59, 175, 30, 81, 175, 79, 186, 180, 103, 67, 37, 124, 4, 42, 179, 51, 171, 76, 191, 86, 164, 134, 30, 35, 54, 214, 31, 140, 205, 117, 158, 71, 22, 246, 162, 26, 63, 124, 44, 96, 120, 66, 156, 134, 62, 88, 116, 226, 237, 201, 188, 87, 68, 78, 123, 36, 245, 134, 244, 118, 153, 68, 181, 170, 41, 216, 69, 228, 231, 16, 221, 235, 186, 28, 243, 145, 153, 9, 247, 229, 214, 92, 129, 246, 139, 90, 157, 20, 11, 217, 113, 1, 158, 31, 40, 20, 175, 134, 23, 170, 138, 245, 224, 124, 248, 210, 211, 44, 245, 180, 116, 173, 0, 38, 31, 223 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 236, 216, 131, 97, 194, 9, 187, 169, 93, 142, 75, 69, 174, 195, 178, 195, 82, 33, 201, 247, 155, 228, 130, 19, 110, 170, 237, 2, 73, 220, 86, 2, 55, 195, 123, 109, 206, 109, 36, 9, 236, 146, 226, 214, 52, 112, 183, 88, 206, 246, 143, 226, 130, 177, 238, 232, 213, 139, 161, 105, 134, 120, 232, 222 }, new byte[] { 165, 66, 233, 50, 180, 68, 129, 201, 13, 203, 144, 112, 119, 23, 156, 219, 28, 3, 231, 43, 253, 47, 193, 217, 181, 27, 161, 154, 245, 177, 252, 89, 147, 123, 52, 98, 9, 2, 47, 47, 254, 78, 93, 109, 145, 78, 219, 70, 168, 2, 174, 52, 58, 180, 102, 44, 70, 150, 125, 224, 43, 90, 173, 16, 198, 34, 229, 205, 161, 154, 204, 10, 190, 55, 65, 51, 216, 210, 4, 66, 232, 167, 153, 240, 112, 99, 14, 221, 93, 220, 75, 188, 177, 195, 255, 255, 245, 74, 23, 166, 101, 14, 38, 255, 131, 126, 78, 22, 231, 68, 52, 145, 34, 50, 244, 123, 192, 133, 17, 125, 40, 94, 234, 24, 206, 43, 2, 233 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 180, 101, 141, 56, 101, 137, 24, 77, 128, 104, 109, 121, 30, 220, 59, 157, 108, 203, 55, 154, 97, 137, 124, 170, 80, 51, 231, 133, 179, 114, 13, 19, 69, 121, 11, 237, 30, 230, 22, 77, 53, 109, 60, 100, 204, 94, 194, 74, 193, 19, 252, 142, 185, 252, 167, 44, 176, 125, 78, 220, 192, 103, 97, 56 }, new byte[] { 240, 233, 176, 145, 104, 76, 244, 16, 195, 79, 229, 55, 106, 67, 145, 138, 144, 53, 68, 187, 78, 249, 174, 164, 18, 222, 197, 3, 231, 197, 139, 94, 48, 55, 179, 31, 87, 196, 104, 117, 169, 127, 41, 245, 160, 126, 85, 253, 46, 106, 176, 33, 31, 9, 83, 229, 93, 137, 210, 215, 57, 149, 12, 21, 131, 227, 172, 231, 138, 165, 96, 101, 58, 124, 213, 48, 132, 61, 164, 37, 188, 218, 243, 234, 143, 231, 162, 48, 149, 66, 215, 242, 179, 75, 77, 70, 69, 166, 20, 62, 196, 135, 73, 0, 198, 199, 200, 15, 51, 145, 122, 193, 38, 170, 7, 210, 129, 80, 0, 123, 50, 239, 64, 86, 131, 1, 178, 165 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 84, 94, 210, 70, 114, 68, 119, 125, 140, 203, 1, 99, 41, 68, 25, 233, 150, 45, 108, 203, 104, 199, 167, 54, 105, 210, 90, 236, 136, 118, 76, 141, 187, 240, 140, 105, 90, 8, 57, 188, 27, 1, 110, 120, 203, 234, 184, 78, 215, 229, 185, 206, 234, 102, 55, 85, 139, 197, 212, 165, 17, 228, 200, 225 }, new byte[] { 72, 78, 38, 0, 208, 215, 57, 62, 82, 77, 41, 30, 190, 63, 160, 141, 196, 47, 76, 40, 107, 64, 55, 246, 162, 153, 84, 203, 0, 29, 37, 48, 178, 219, 79, 160, 180, 148, 72, 27, 198, 150, 114, 226, 92, 119, 184, 121, 33, 45, 52, 69, 83, 104, 153, 243, 222, 15, 193, 153, 30, 103, 28, 56, 44, 213, 236, 249, 84, 111, 239, 94, 58, 117, 108, 166, 119, 20, 112, 209, 67, 134, 198, 156, 14, 86, 63, 250, 139, 244, 75, 102, 218, 78, 129, 173, 138, 6, 83, 239, 171, 179, 112, 3, 106, 46, 231, 37, 253, 205, 168, 101, 75, 184, 246, 24, 43, 255, 57, 56, 15, 93, 101, 138, 77, 155, 5, 36 } });
        }
    }
}
