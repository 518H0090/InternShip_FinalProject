using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace ShopeeApi.Migrations
{
    public partial class AddFoodRecord : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.CreateTable(
                name: "SelectFoodRecords",
                columns: table => new
                {
                    RecordId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    FoodImageUrl = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    FoodTitle = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    FoodDescription = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    FoodPrice = table.Column<float>(type: "real", nullable: false),
                    UserId = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SelectFoodRecords", x => x.RecordId);
                    table.ForeignKey(
                        name: "FK_SelectFoodRecords_Users_UserId",
                        column: x => x.UserId,
                        principalTable: "Users",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 151, 19, 195, 93, 233, 137, 223, 33, 102, 178, 148, 175, 39, 219, 89, 111, 23, 14, 165, 154, 63, 198, 139, 224, 3, 92, 9, 168, 130, 212, 191, 243, 108, 34, 104, 239, 144, 135, 177, 123, 9, 150, 166, 168, 150, 194, 151, 255, 7, 50, 66, 190, 123, 228, 2, 24, 63, 230, 31, 228, 94, 87, 218, 228 }, new byte[] { 49, 174, 85, 35, 1, 59, 34, 79, 87, 107, 144, 33, 176, 146, 73, 88, 164, 184, 107, 34, 40, 177, 132, 246, 91, 182, 113, 101, 181, 250, 149, 205, 107, 112, 99, 239, 55, 147, 207, 120, 6, 229, 204, 65, 203, 120, 55, 194, 10, 248, 129, 77, 76, 17, 50, 72, 101, 131, 17, 6, 54, 231, 32, 198, 165, 221, 98, 35, 231, 226, 31, 139, 47, 235, 103, 81, 42, 221, 92, 11, 100, 10, 167, 223, 143, 231, 188, 24, 110, 52, 190, 76, 20, 71, 49, 204, 21, 28, 46, 213, 146, 99, 129, 225, 59, 51, 156, 178, 39, 39, 56, 199, 20, 252, 29, 110, 254, 86, 209, 0, 133, 89, 188, 170, 201, 124, 178, 58 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 101, 242, 144, 116, 17, 108, 31, 171, 152, 191, 41, 153, 180, 38, 75, 6, 172, 206, 234, 127, 81, 64, 182, 253, 172, 134, 161, 130, 223, 217, 33, 255, 104, 113, 84, 200, 77, 253, 29, 73, 100, 174, 86, 52, 122, 53, 127, 40, 179, 229, 73, 133, 227, 16, 73, 219, 170, 222, 135, 1, 211, 10, 60, 1 }, new byte[] { 128, 208, 105, 132, 195, 37, 142, 43, 245, 145, 180, 142, 116, 110, 247, 199, 178, 152, 202, 236, 119, 185, 80, 241, 20, 222, 170, 40, 23, 252, 179, 125, 0, 30, 20, 240, 173, 45, 19, 152, 158, 215, 131, 208, 120, 252, 100, 189, 51, 168, 36, 50, 166, 79, 83, 64, 111, 188, 137, 221, 186, 164, 19, 31, 147, 140, 104, 9, 187, 2, 108, 222, 11, 69, 215, 248, 43, 38, 79, 189, 239, 35, 141, 144, 124, 199, 117, 177, 21, 134, 51, 132, 213, 149, 54, 255, 152, 107, 24, 120, 103, 141, 110, 198, 106, 72, 217, 246, 142, 106, 150, 19, 202, 237, 63, 25, 175, 234, 190, 122, 80, 237, 0, 98, 59, 84, 14, 236 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 110, 19, 20, 29, 55, 151, 14, 236, 46, 78, 252, 65, 94, 35, 39, 208, 155, 191, 76, 168, 42, 163, 38, 7, 159, 205, 56, 33, 1, 41, 124, 209, 141, 249, 231, 149, 179, 162, 154, 4, 21, 58, 51, 213, 57, 222, 207, 147, 121, 172, 3, 24, 31, 3, 149, 16, 198, 196, 82, 49, 38, 132, 253, 56 }, new byte[] { 18, 146, 236, 68, 164, 239, 57, 85, 30, 153, 19, 242, 225, 148, 96, 181, 138, 9, 24, 117, 43, 48, 179, 139, 237, 34, 145, 194, 237, 45, 104, 26, 109, 176, 43, 238, 222, 216, 170, 55, 239, 71, 181, 249, 72, 140, 233, 251, 142, 192, 173, 27, 24, 11, 162, 201, 145, 233, 194, 144, 73, 131, 129, 187, 31, 8, 75, 238, 31, 100, 90, 153, 246, 25, 41, 60, 216, 49, 139, 175, 63, 111, 116, 139, 40, 44, 184, 101, 225, 145, 142, 6, 17, 165, 122, 232, 83, 158, 177, 50, 203, 13, 146, 64, 152, 72, 189, 187, 16, 42, 6, 130, 61, 72, 119, 234, 23, 149, 147, 103, 74, 66, 28, 0, 16, 41, 166, 37 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 242, 196, 11, 15, 45, 188, 162, 36, 191, 116, 159, 54, 20, 81, 181, 213, 1, 103, 161, 69, 238, 145, 116, 57, 91, 8, 168, 177, 17, 110, 47, 110, 121, 154, 106, 232, 82, 100, 237, 70, 102, 148, 226, 199, 175, 125, 223, 181, 137, 238, 97, 8, 208, 125, 217, 165, 155, 133, 197, 81, 67, 214, 218, 50 }, new byte[] { 67, 30, 20, 222, 71, 115, 111, 208, 110, 3, 99, 129, 66, 220, 8, 188, 217, 97, 116, 51, 249, 103, 243, 82, 111, 181, 233, 198, 2, 107, 131, 164, 198, 31, 15, 56, 143, 105, 222, 206, 106, 193, 238, 244, 29, 149, 186, 175, 50, 100, 17, 73, 43, 140, 57, 211, 55, 100, 28, 149, 200, 31, 135, 108, 61, 200, 165, 231, 190, 89, 240, 161, 169, 184, 151, 46, 202, 40, 37, 50, 232, 201, 148, 128, 48, 31, 214, 249, 118, 150, 155, 218, 239, 176, 111, 189, 41, 174, 209, 64, 36, 183, 123, 196, 3, 9, 105, 42, 231, 165, 48, 170, 29, 201, 34, 71, 159, 128, 30, 233, 182, 217, 237, 64, 47, 229, 191, 186 } });

            migrationBuilder.CreateIndex(
                name: "IX_SelectFoodRecords_UserId",
                table: "SelectFoodRecords",
                column: "UserId");
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "SelectFoodRecords");

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 95, 219, 72, 7, 249, 206, 113, 11, 31, 61, 78, 95, 252, 222, 68, 119, 61, 4, 17, 16, 244, 116, 222, 5, 126, 201, 168, 5, 198, 189, 101, 255, 125, 141, 14, 113, 149, 250, 147, 231, 109, 210, 71, 124, 163, 227, 10, 240, 39, 10, 179, 127, 92, 57, 27, 31, 154, 133, 45, 50, 74, 176, 127, 1 }, new byte[] { 206, 236, 36, 67, 111, 175, 193, 156, 207, 164, 88, 114, 87, 231, 60, 74, 222, 40, 34, 225, 158, 149, 12, 89, 55, 45, 178, 225, 8, 108, 126, 11, 60, 42, 15, 77, 81, 96, 146, 217, 151, 188, 67, 242, 151, 113, 196, 206, 238, 24, 122, 61, 216, 58, 126, 25, 205, 44, 52, 238, 12, 139, 182, 251, 109, 27, 47, 247, 7, 179, 179, 210, 29, 81, 244, 146, 183, 89, 58, 19, 210, 146, 138, 75, 27, 241, 128, 141, 234, 166, 47, 248, 83, 210, 195, 155, 255, 209, 118, 152, 150, 236, 0, 22, 231, 214, 189, 48, 219, 38, 222, 121, 126, 168, 240, 230, 172, 117, 138, 25, 31, 106, 79, 67, 6, 90, 37, 50 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 90, 22, 15, 117, 107, 126, 188, 253, 244, 201, 55, 13, 0, 195, 109, 11, 197, 234, 106, 173, 167, 208, 20, 251, 129, 219, 82, 105, 0, 2, 214, 159, 132, 101, 207, 171, 51, 117, 21, 39, 159, 136, 191, 143, 244, 107, 133, 58, 197, 78, 242, 142, 92, 165, 127, 207, 72, 176, 220, 74, 59, 198, 13, 113 }, new byte[] { 96, 158, 90, 181, 9, 183, 40, 155, 255, 228, 242, 51, 124, 253, 150, 76, 105, 165, 249, 227, 34, 55, 22, 23, 108, 233, 20, 18, 0, 148, 175, 132, 125, 82, 115, 132, 6, 158, 13, 55, 70, 86, 249, 123, 163, 99, 159, 100, 202, 14, 19, 102, 4, 81, 246, 165, 86, 230, 122, 240, 108, 241, 176, 166, 38, 189, 97, 43, 91, 83, 68, 198, 114, 230, 57, 64, 88, 70, 158, 75, 163, 122, 77, 76, 167, 108, 45, 0, 39, 140, 107, 248, 47, 73, 33, 157, 47, 63, 199, 243, 181, 74, 146, 42, 48, 113, 75, 238, 190, 100, 64, 33, 60, 124, 156, 135, 199, 50, 247, 105, 19, 198, 180, 178, 208, 190, 143, 49 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 3, 244, 75, 246, 146, 109, 186, 37, 180, 186, 57, 98, 156, 13, 22, 213, 16, 54, 199, 140, 138, 127, 174, 157, 118, 193, 111, 112, 239, 24, 19, 106, 167, 61, 242, 195, 158, 156, 58, 128, 154, 180, 21, 224, 139, 217, 61, 145, 209, 143, 65, 248, 122, 152, 151, 160, 98, 120, 187, 44, 27, 69, 65, 10 }, new byte[] { 125, 114, 178, 42, 75, 176, 178, 66, 106, 244, 138, 20, 236, 82, 193, 16, 54, 98, 56, 200, 62, 77, 116, 78, 150, 104, 98, 139, 68, 51, 198, 146, 183, 228, 213, 20, 61, 92, 99, 27, 161, 200, 28, 148, 102, 180, 146, 174, 108, 89, 65, 135, 229, 152, 185, 147, 59, 243, 109, 64, 147, 150, 19, 40, 41, 179, 208, 4, 175, 18, 114, 133, 131, 86, 249, 152, 19, 52, 192, 236, 82, 244, 35, 173, 99, 12, 147, 195, 255, 188, 91, 252, 205, 53, 91, 17, 4, 166, 194, 48, 179, 185, 35, 138, 37, 80, 73, 14, 176, 221, 223, 32, 99, 37, 170, 111, 184, 108, 217, 92, 106, 159, 77, 171, 145, 18, 88, 140 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 152, 182, 215, 116, 228, 3, 172, 120, 221, 214, 167, 24, 176, 69, 68, 137, 230, 125, 159, 0, 195, 219, 119, 50, 0, 101, 10, 254, 165, 43, 14, 236, 33, 231, 202, 149, 111, 78, 235, 25, 63, 219, 195, 101, 33, 232, 153, 192, 189, 38, 76, 201, 208, 9, 24, 32, 24, 112, 2, 23, 255, 55, 56, 168 }, new byte[] { 239, 170, 26, 83, 219, 228, 116, 198, 150, 232, 47, 214, 121, 93, 0, 150, 25, 185, 118, 250, 117, 85, 86, 216, 97, 128, 95, 29, 202, 139, 60, 180, 208, 89, 175, 56, 56, 109, 207, 170, 206, 139, 34, 183, 18, 205, 47, 127, 70, 179, 181, 51, 150, 139, 86, 147, 226, 227, 78, 30, 255, 59, 11, 14, 143, 11, 111, 12, 55, 143, 65, 3, 31, 178, 79, 42, 83, 88, 134, 28, 127, 210, 89, 189, 44, 183, 253, 149, 253, 22, 16, 140, 12, 26, 96, 136, 156, 41, 71, 15, 119, 188, 152, 47, 205, 226, 252, 11, 125, 234, 9, 220, 243, 248, 52, 113, 253, 208, 205, 111, 198, 247, 130, 0, 1, 26, 49, 49 } });
        }
    }
}
